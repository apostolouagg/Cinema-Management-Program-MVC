// <auto-generated />
using System;
using MVCERGASIA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCERGASIA.Migrations
{
    [DbContext(typeof(MVCDbContext))]
    [Migration("20240207225349_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVCERGASIA.Models.Admins", b =>
                {
                    b.Property<int>("adminid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("adminid"), 1L, 1);

                    b.Property<string>("AdminsUsername")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("adminname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("adminid");

                    b.HasIndex("AdminsUsername");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Cinemas", b =>
                {
                    b.Property<int>("cinemaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cinemaid"), 1L, 1);

                    b.Property<string>("cinema_3d")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("cinemaname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("cinemaid");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Content_Admin", b =>
                {
                    b.Property<int>("contentadminid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("contentadminid"), 1L, 1);

                    b.Property<string>("ContentAdminUsername")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("contentadminname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("contentadminid");

                    b.HasIndex("ContentAdminUsername");

                    b.ToTable("ContentAdmins");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Customers", b =>
                {
                    b.Property<int>("customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customerid"), 1L, 1);

                    b.Property<string>("CustomerUsername")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("customername")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("customerid");

                    b.HasIndex("CustomerUsername");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Movies", b =>
                {
                    b.Property<int>("moviesid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("moviesid"), 1L, 1);

                    b.Property<int>("ContentAdminId")
                        .HasColumnType("int");

                    b.Property<string>("moviecontent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moviedirector")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("movielength")
                        .HasColumnType("int");

                    b.Property<string>("moviename")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("movieseats")
                        .HasColumnType("int");

                    b.Property<string>("moviesummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movietype")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("moviesid");

                    b.HasIndex("ContentAdminId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Provoles", b =>
                {
                    b.Property<int>("provolesid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("provolesid"), 1L, 1);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<int>("ContentAdminId")
                        .HasColumnType("int");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvolesMovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("provoles_time")
                        .HasColumnType("datetime2");

                    b.HasKey("provolesid");

                    b.HasIndex("CinemaId");

                    b.HasIndex("ContentAdminId");

                    b.HasIndex("ProvolesMovieId");

                    b.ToTable("Provoles");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Reservations", b =>
                {
                    b.Property<int>("ReservationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationsId"), 1L, 1);

                    b.Property<int>("CustomersId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationsCinemaId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationsMovieId")
                        .HasColumnType("int");

                    b.Property<string>("ReservationsMovieName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("number_of_seats")
                        .HasColumnType("int");

                    b.Property<DateTime>("reservations_time")
                        .HasColumnType("datetime2");

                    b.HasKey("ReservationsId");

                    b.HasIndex("CustomersId");

                    b.HasIndex("ReservationsCinemaId");

                    b.HasIndex("ReservationsMovieId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Users", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Admins", b =>
                {
                    b.HasOne("MVCERGASIA.Models.Users", "users")
                        .WithMany()
                        .HasForeignKey("AdminsUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Content_Admin", b =>
                {
                    b.HasOne("MVCERGASIA.Models.Users", "users")
                        .WithMany()
                        .HasForeignKey("ContentAdminUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Customers", b =>
                {
                    b.HasOne("MVCERGASIA.Models.Users", "users")
                        .WithMany()
                        .HasForeignKey("CustomerUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Movies", b =>
                {
                    b.HasOne("MVCERGASIA.Models.Content_Admin", "content_admin")
                        .WithMany()
                        .HasForeignKey("ContentAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("content_admin");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Provoles", b =>
                {
                    b.HasOne("MVCERGASIA.Models.Cinemas", "cinema")
                        .WithMany()
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MVCERGASIA.Models.Content_Admin", "content_admin")
                        .WithMany()
                        .HasForeignKey("ContentAdminId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MVCERGASIA.Models.Movies", "Movies")
                        .WithMany()
                        .HasForeignKey("ProvolesMovieId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("cinema");

                    b.Navigation("content_admin");
                });

            modelBuilder.Entity("MVCERGASIA.Models.Reservations", b =>
                {
                    b.HasOne("MVCERGASIA.Models.Customers", "customers")
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCERGASIA.Models.Cinemas", "cinemas")
                        .WithMany()
                        .HasForeignKey("ReservationsCinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCERGASIA.Models.Movies", "movies")
                        .WithMany()
                        .HasForeignKey("ReservationsMovieId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("cinemas");

                    b.Navigation("customers");

                    b.Navigation("movies");
                });
#pragma warning restore 612, 618
        }
    }
}
